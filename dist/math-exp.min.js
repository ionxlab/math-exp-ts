!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("math-exp",[],t):"object"==typeof exports?exports["math-exp"]=t():e["math-exp"]=t()}(this,(function(){return(()=>{"use strict";var e={"./src/core/ExpressionBuilder.ts":
/*!***************************************!*\
  !*** ./src/core/ExpressionBuilder.ts ***!
  \***************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ExpressionBuilder=void 0;const s=r(/*! ../expression/Expression */"./src/expression/Expression.ts");t.ExpressionBuilder=class{constructor(...e){this.expression=new s.Expression,this.expression.terms=this.expression.terms.concat(e),this.expression.setBrackets(!1)}add(e,t){return void 0!==t?this.expression.terms.splice(t,0,e):this.expression.push(e),this.expression.terms.length}remove(e){return e>=0&&e<this.expression.terms.length&&this.expression.terms.splice(e,1),this.expression}getExpression(){return this.expression}clear(){this.expression.terms=[]}}},"./src/core/ExpressionParser.ts":
/*!**************************************!*\
  !*** ./src/core/ExpressionParser.ts ***!
  \**************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ExpressionParser=void 0;const s=r(/*! ../expression/Expression */"./src/expression/Expression.ts");t.ExpressionParser=class{constructor(){}parse(){return new s.Expression}}},"./src/exceptions/DivisionByZeroException.ts":
/*!***************************************************!*\
  !*** ./src/exceptions/DivisionByZeroException.ts ***!
  \***************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DivisionByZeroException=void 0;const s=r(/*! ./EvaluateException */"./src/exceptions/EvaluateException.ts");class o extends s.EvaluateException{constructor(e){super(e)}}t.DivisionByZeroException=o},"./src/exceptions/EmptyExpressionException.ts":
/*!****************************************************!*\
  !*** ./src/exceptions/EmptyExpressionException.ts ***!
  \****************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EmptyExpressionException=void 0;const s=r(/*! ./EvaluateException */"./src/exceptions/EvaluateException.ts");class o extends s.EvaluateException{constructor(e){super(e)}}t.EmptyExpressionException=o},"./src/exceptions/EvaluateException.ts":
/*!*********************************************!*\
  !*** ./src/exceptions/EvaluateException.ts ***!
  \*********************************************/(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EvaluateException=void 0;class r extends Error{constructor(e){super(e)}}t.EvaluateException=r},"./src/exceptions/MissingOperandException.ts":
/*!***************************************************!*\
  !*** ./src/exceptions/MissingOperandException.ts ***!
  \***************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MissingOperandException=void 0;const s=r(/*! ./MissingTermException */"./src/exceptions/MissingTermException.ts");class o extends s.MissingTermException{constructor(e){super(e)}}t.MissingOperandException=o},"./src/exceptions/MissingTermException.ts":
/*!************************************************!*\
  !*** ./src/exceptions/MissingTermException.ts ***!
  \************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MissingTermException=void 0;const s=r(/*! ./EvaluateException */"./src/exceptions/EvaluateException.ts");class o extends s.EvaluateException{constructor(e){super(e)}}t.MissingTermException=o},"./src/expression/Expression.ts":
/*!**************************************!*\
  !*** ./src/expression/Expression.ts ***!
  \**************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Expression=void 0;const s=r(/*! ./abstract/OperatorAbstract */"./src/expression/abstract/OperatorAbstract.ts"),o=r(/*! ./abstract/OperandAbstract */"./src/expression/abstract/OperandAbstract.ts"),n=r(/*! ./abstract/TermAbstract */"./src/expression/abstract/TermAbstract.ts"),i=r(/*! ./abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts"),a=r(/*! ./abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts"),c=r(/*! ./operands/Constant */"./src/expression/operands/Constant.ts"),p=r(/*! ../exceptions/MissingTermException */"./src/exceptions/MissingTermException.ts"),u=r(/*! ../exceptions/MissingOperandException */"./src/exceptions/MissingOperandException.ts"),l=r(/*! ../exceptions/EmptyExpressionException */"./src/exceptions/EmptyExpressionException.ts");class x extends n.TermAbstract{constructor(...e){super(),this.precedence=19,this.terms=new Array,this.brackets=!0,void 0!==e&&(this.terms=this.terms.concat(e))}push(e){return this.terms.push(e),this}pop(){return this.terms.pop()}shift(){return this.terms.shift()}unshift(e){return this.terms.unshift(e),this}setBrackets(e){this.brackets=e}evaluate(){if(0==this.terms.length)throw new l.EmptyExpressionException;this.Log("Evaluating:",this.toString());let e=this.clone();for(;e.terms.length>1||!(e.terms[0]instanceof o.OperandAbstract);){let t=-1,r=-1;e.terms.forEach(((e,s)=>{e.precedence>t&&(t=e.precedence,r=s)})),e=this.evaluateTerm(e,r),this.Log("Temporary expression:",e.toString())}return e.terms[0].evaluate()}evaluateTerm(e,t){let r=e.clone();const n=r.terms[t];this.Log("Evaluating Term:",n.toString());let l=0;if(!n)throw new p.MissingTermException("Term at '"+t+"' is missing.");if(n instanceof x)this.Log("Term is an 'Expression'"),l=n.evaluate(),r.terms[t]=new c.Constant(l);else if(n instanceof s.OperatorAbstract)if(n instanceof i.OperatorLeftRightAbstract){this.Log("Term is an 'OperatorLeftRight'");const e=r.terms[t-1],s=r.terms[t+1];if(!(e instanceof o.OperandAbstract))throw new u.MissingOperandException("Left argument of operator '"+n.toString()+"' is invalid.");if(!(s instanceof o.OperandAbstract))throw new u.MissingOperandException("Right argument of operator '"+n.toString()+"' is invalid.");l=n.evaluate(e.evaluate(),s.evaluate()),this.Log("Evaluated Value: ",l),r.terms[t]=new c.Constant(l),r.terms.splice(t+1,1),r.terms.splice(t-1,1)}else n instanceof a.OperatorFunctionAbstract&&(this.Log("Term is an 'OperatorFunction'"),l=n.evaluate(),r.terms[t]=new c.Constant(l));else n instanceof o.OperandAbstract&&(this.Log("Term is an 'Operand'"),l=n.evaluate(),r.terms[t]=new c.Constant(l));return r}Log(...e){x.debug&&console.log.apply(console,e)}clone(){let e=new x;return e.brackets=this.brackets,e.terms=e.terms.concat(this.terms),e}toString(){let e="";return this.terms.forEach(((t,r)=>{e+=t.toString()})),this.brackets&&(e="("+e+")"),e}}t.Expression=x,x.debug=!0},"./src/expression/abstract/OperandAbstract.ts":
/*!****************************************************!*\
  !*** ./src/expression/abstract/OperandAbstract.ts ***!
  \****************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OperandAbstract=void 0;const s=r(/*! ./TermAbstract */"./src/expression/abstract/TermAbstract.ts");class o extends s.TermAbstract{constructor(){super(...arguments),this.precedence=0}}t.OperandAbstract=o},"./src/expression/abstract/OperatorAbstract.ts":
/*!*****************************************************!*\
  !*** ./src/expression/abstract/OperatorAbstract.ts ***!
  \*****************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OperatorAbstract=void 0;const s=r(/*! ./TermAbstract */"./src/expression/abstract/TermAbstract.ts");class o extends s.TermAbstract{constructor(e,t){super(),this.name=e,this.symbol=t}}t.OperatorAbstract=o},"./src/expression/abstract/OperatorFunctionAbstract.ts":
/*!*************************************************************!*\
  !*** ./src/expression/abstract/OperatorFunctionAbstract.ts ***!
  \*************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OperatorFunctionAbstract=void 0;const s=r(/*! ./OperatorAbstract */"./src/expression/abstract/OperatorAbstract.ts");class o extends s.OperatorAbstract{constructor(e,t,r){super(e,t),this.precedence=18,this.expression=r}toString(){return this.symbol+this.expression.toString()}}t.OperatorFunctionAbstract=o},"./src/expression/abstract/OperatorLeftRightAbstract.ts":
/*!**************************************************************!*\
  !*** ./src/expression/abstract/OperatorLeftRightAbstract.ts ***!
  \**************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OperatorLeftRightAbstract=void 0;const s=r(/*! ./OperatorAbstract */"./src/expression/abstract/OperatorAbstract.ts");class o extends s.OperatorAbstract{constructor(e,t){super(e,t),this.name=e,this.symbol=t}toString(){return this.symbol}}t.OperatorLeftRightAbstract=o},"./src/expression/abstract/TermAbstract.ts":
/*!*************************************************!*\
  !*** ./src/expression/abstract/TermAbstract.ts ***!
  \*************************************************/(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TermAbstract=void 0;t.TermAbstract=class{}},"./src/expression/index.ts":
/*!*********************************!*\
  !*** ./src/expression/index.ts ***!
  \*********************************/function(e,t,r){var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){void 0===s&&(s=r),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,s){void 0===s&&(s=r),e[s]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||s(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),t.Expression=void 0;var n=r(/*! ./Expression */"./src/expression/Expression.ts");Object.defineProperty(t,"Expression",{enumerable:!0,get:function(){return n.Expression}}),o(r(/*! ./operators */"./src/expression/operators/index.ts"),t),o(r(/*! ./operands */"./src/expression/operands/index.ts"),t),o(r(/*! ./utils */"./src/expression/utils/index.ts"),t)},"./src/expression/operands/Constant.ts":
/*!*********************************************!*\
  !*** ./src/expression/operands/Constant.ts ***!
  \*********************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Constant=void 0;const s=r(/*! ../abstract/OperandAbstract */"./src/expression/abstract/OperandAbstract.ts");class o extends s.OperandAbstract{constructor(e){super(),this.value=e}evaluate(){return this.value}toString(){return this.value.toString()}}t.Constant=o},"./src/expression/operands/Variable.ts":
/*!*********************************************!*\
  !*** ./src/expression/operands/Variable.ts ***!
  \*********************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Variable=void 0;const s=r(/*! ../abstract/OperandAbstract */"./src/expression/abstract/OperandAbstract.ts"),o=r(/*! ../utils/VariableMap */"./src/expression/utils/VariableMap.ts");class n extends s.OperandAbstract{constructor(e,t,r){super(),this.coefficient=0,this.letter=e,void 0!==t&&(this.coefficient=t),void 0!==r&&n._values.set(this.letter,r)}static get values(){return n._values}evaluate(){let e=n._values.get(this.letter);return null==e&&(e=0),this.coefficient*e}toString(){return this.coefficient.toString()+this.letter}}t.Variable=n,n._values=new o.VariableMap},"./src/expression/operands/index.ts":
/*!******************************************!*\
  !*** ./src/expression/operands/index.ts ***!
  \******************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Variable=t.Constant=void 0;var s=r(/*! ./Constant */"./src/expression/operands/Constant.ts");Object.defineProperty(t,"Constant",{enumerable:!0,get:function(){return s.Constant}});var o=r(/*! ./Variable */"./src/expression/operands/Variable.ts");Object.defineProperty(t,"Variable",{enumerable:!0,get:function(){return o.Variable}})},"./src/expression/operators/arithmetic/Divide.operator.ts":
/*!****************************************************************!*\
  !*** ./src/expression/operators/arithmetic/Divide.operator.ts ***!
  \****************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DivideOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts"),o=r(/*! ../../../exceptions/DivisionByZeroException */"./src/exceptions/DivisionByZeroException.ts");class n extends s.OperatorLeftRightAbstract{constructor(){super("Divide","/"),this.precedence=13}evaluate(e,t){if(0==t)throw new o.DivisionByZeroException;return e/t}}t.DivideOperator=n},"./src/expression/operators/arithmetic/Exponent.operator.ts":
/*!******************************************************************!*\
  !*** ./src/expression/operators/arithmetic/Exponent.operator.ts ***!
  \******************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ExponentOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(){super("Exponent","^"),this.precedence=14}evaluate(e,t){return Math.pow(e,t)}}t.ExponentOperator=o},"./src/expression/operators/arithmetic/Minus.operator.ts":
/*!***************************************************************!*\
  !*** ./src/expression/operators/arithmetic/Minus.operator.ts ***!
  \***************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MinusOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(){super("Minus","-"),this.precedence=12}evaluate(e,t){return e-t}}t.MinusOperator=o},"./src/expression/operators/arithmetic/Multiply.operator.ts":
/*!******************************************************************!*\
  !*** ./src/expression/operators/arithmetic/Multiply.operator.ts ***!
  \******************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MultiplyOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(){super("Multiply","*"),this.precedence=13}evaluate(e,t){return e*t}}t.MultiplyOperator=o},"./src/expression/operators/arithmetic/Plus.operator.ts":
/*!**************************************************************!*\
  !*** ./src/expression/operators/arithmetic/Plus.operator.ts ***!
  \**************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PlusOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(){super("Plus","+"),this.precedence=12}evaluate(e,t){return e+t}}t.PlusOperator=o},"./src/expression/operators/bitwise/And.operator.ts":
/*!**********************************************************!*\
  !*** ./src/expression/operators/bitwise/And.operator.ts ***!
  \**********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AndOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(){super(...arguments),this.precedence=8}evaluate(e,t){return e&t}}t.AndOperator=o},"./src/expression/operators/bitwise/Or.operator.ts":
/*!*********************************************************!*\
  !*** ./src/expression/operators/bitwise/Or.operator.ts ***!
  \*********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OrOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(){super(...arguments),this.precedence=6}evaluate(e,t){return e|t}}t.OrOperator=o},"./src/expression/operators/bitwise/Xor.operator.ts":
/*!**********************************************************!*\
  !*** ./src/expression/operators/bitwise/Xor.operator.ts ***!
  \**********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.XorOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(){super(...arguments),this.precedence=7}evaluate(e,t){return e^t}}t.XorOperator=o},"./src/expression/operators/function/Cos.operator.ts":
/*!***********************************************************!*\
  !*** ./src/expression/operators/function/Cos.operator.ts ***!
  \***********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CosOperator=void 0;const s=r(/*! ../../abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts"),o=r(/*! ../../Expression */"./src/expression/Expression.ts");class n extends s.OperatorFunctionAbstract{constructor(...e){super("Cos","cos",new o.Expression(...e))}evaluate(){const e=this.expression.evaluate();return Math.cos(e)}}t.CosOperator=n},"./src/expression/operators/function/Ln.operator.ts":
/*!**********************************************************!*\
  !*** ./src/expression/operators/function/Ln.operator.ts ***!
  \**********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LnOperator=void 0;const s=r(/*! ../../abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts"),o=r(/*! ../../Expression */"./src/expression/Expression.ts");class n extends s.OperatorFunctionAbstract{constructor(...e){super("Ln","Ln",new o.Expression(...e))}evaluate(){const e=this.expression.evaluate();return Math.log(e)}}t.LnOperator=n},"./src/expression/operators/function/Log.operator.ts":
/*!***********************************************************!*\
  !*** ./src/expression/operators/function/Log.operator.ts ***!
  \***********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LogOperator=void 0;const s=r(/*! ../../abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts"),o=r(/*! ../../Expression */"./src/expression/Expression.ts");class n extends s.OperatorFunctionAbstract{constructor(...e){super("Log","Log",new o.Expression(...e))}evaluate(){const e=this.expression.evaluate();return Math.log10(e)}}t.LogOperator=n},"./src/expression/operators/function/Sin.operator.ts":
/*!***********************************************************!*\
  !*** ./src/expression/operators/function/Sin.operator.ts ***!
  \***********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SinOperator=void 0;const s=r(/*! ../../abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts"),o=r(/*! ../../Expression */"./src/expression/Expression.ts");class n extends s.OperatorFunctionAbstract{constructor(...e){super("Sin","sin",new o.Expression(...e))}evaluate(){const e=this.expression.evaluate();return Math.sin(e)}}t.SinOperator=n},"./src/expression/operators/function/SquareRoot.operator.ts":
/*!******************************************************************!*\
  !*** ./src/expression/operators/function/SquareRoot.operator.ts ***!
  \******************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SquareRootOperator=void 0;const s=r(/*! ../../abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts"),o=r(/*! ../../Expression */"./src/expression/Expression.ts");class n extends s.OperatorFunctionAbstract{constructor(...e){super("Sqrt","√",new o.Expression(...e))}evaluate(){const e=this.expression.evaluate();return Math.sqrt(e)}}t.SquareRootOperator=n},"./src/expression/operators/function/Tan.operator.ts":
/*!***********************************************************!*\
  !*** ./src/expression/operators/function/Tan.operator.ts ***!
  \***********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TanOperator=void 0;const s=r(/*! ../../abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts"),o=r(/*! ../../Expression */"./src/expression/Expression.ts");class n extends s.OperatorFunctionAbstract{constructor(...e){super("Tan","tan",new o.Expression(...e))}evaluate(){const e=this.expression.evaluate();return Math.tan(e)}}t.TanOperator=n},"./src/expression/operators/index.ts":
/*!*******************************************!*\
  !*** ./src/expression/operators/index.ts ***!
  \*******************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TanOperator=t.SquareRootOperator=t.SinOperator=t.LogOperator=t.LnOperator=t.CosOperator=t.XorOperator=t.OrOperator=t.AndOperator=t.PlusOperator=t.MultiplyOperator=t.MinusOperator=t.ExponentOperator=t.DivideOperator=void 0;var s=r(/*! ./arithmetic/Divide.operator */"./src/expression/operators/arithmetic/Divide.operator.ts");Object.defineProperty(t,"DivideOperator",{enumerable:!0,get:function(){return s.DivideOperator}});var o=r(/*! ./arithmetic/Exponent.operator */"./src/expression/operators/arithmetic/Exponent.operator.ts");Object.defineProperty(t,"ExponentOperator",{enumerable:!0,get:function(){return o.ExponentOperator}});var n=r(/*! ./arithmetic/Minus.operator */"./src/expression/operators/arithmetic/Minus.operator.ts");Object.defineProperty(t,"MinusOperator",{enumerable:!0,get:function(){return n.MinusOperator}});var i=r(/*! ./arithmetic/Multiply.operator */"./src/expression/operators/arithmetic/Multiply.operator.ts");Object.defineProperty(t,"MultiplyOperator",{enumerable:!0,get:function(){return i.MultiplyOperator}});var a=r(/*! ./arithmetic/Plus.operator */"./src/expression/operators/arithmetic/Plus.operator.ts");Object.defineProperty(t,"PlusOperator",{enumerable:!0,get:function(){return a.PlusOperator}});var c=r(/*! ./bitwise/And.operator */"./src/expression/operators/bitwise/And.operator.ts");Object.defineProperty(t,"AndOperator",{enumerable:!0,get:function(){return c.AndOperator}});var p=r(/*! ./bitwise/Or.operator */"./src/expression/operators/bitwise/Or.operator.ts");Object.defineProperty(t,"OrOperator",{enumerable:!0,get:function(){return p.OrOperator}});var u=r(/*! ./bitwise/Xor.operator */"./src/expression/operators/bitwise/Xor.operator.ts");Object.defineProperty(t,"XorOperator",{enumerable:!0,get:function(){return u.XorOperator}});var l=r(/*! ./function/Cos.operator */"./src/expression/operators/function/Cos.operator.ts");Object.defineProperty(t,"CosOperator",{enumerable:!0,get:function(){return l.CosOperator}});var x=r(/*! ./function/Ln.operator */"./src/expression/operators/function/Ln.operator.ts");Object.defineProperty(t,"LnOperator",{enumerable:!0,get:function(){return x.LnOperator}});var d=r(/*! ./function/Log.operator */"./src/expression/operators/function/Log.operator.ts");Object.defineProperty(t,"LogOperator",{enumerable:!0,get:function(){return d.LogOperator}});var b=r(/*! ./function/Sin.operator */"./src/expression/operators/function/Sin.operator.ts");Object.defineProperty(t,"SinOperator",{enumerable:!0,get:function(){return b.SinOperator}});var O=r(/*! ./function/SquareRoot.operator */"./src/expression/operators/function/SquareRoot.operator.ts");Object.defineProperty(t,"SquareRootOperator",{enumerable:!0,get:function(){return O.SquareRootOperator}});var h=r(/*! ./function/Tan.operator */"./src/expression/operators/function/Tan.operator.ts");Object.defineProperty(t,"TanOperator",{enumerable:!0,get:function(){return h.TanOperator}})},"./src/expression/utils/VariableMap.ts":
/*!*********************************************!*\
  !*** ./src/expression/utils/VariableMap.ts ***!
  \*********************************************/(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.VariableMap=void 0;class r extends Map{constructor(){super(),this.set("a",0),this.set("b",0),this.set("c",0),this.set("d",0),this.set("e",0),this.set("f",0),this.set("g",0),this.set("h",0),this.set("i",0),this.set("j",0),this.set("k",0),this.set("l",0),this.set("m",0),this.set("n",0),this.set("o",0),this.set("p",0),this.set("q",0),this.set("r",0),this.set("s",0),this.set("t",0),this.set("u",0),this.set("v",0),this.set("w",0),this.set("x",0),this.set("y",0),this.set("z",0),this.set("A",0),this.set("B",0),this.set("C",0),this.set("D",0),this.set("E",0),this.set("F",0),this.set("G",0),this.set("H",0),this.set("I",0),this.set("J",0),this.set("K",0),this.set("L",0),this.set("M",0),this.set("N",0),this.set("O",0),this.set("P",0),this.set("Q",0),this.set("R",0),this.set("S",0),this.set("T",0),this.set("U",0),this.set("V",0),this.set("W",0),this.set("X",0),this.set("Y",0),this.set("Z",0)}}t.VariableMap=r},"./src/expression/utils/index.ts":
/*!***************************************!*\
  !*** ./src/expression/utils/index.ts ***!
  \***************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.VariableMap=void 0;var s=r(/*! ./VariableMap */"./src/expression/utils/VariableMap.ts");Object.defineProperty(t,"VariableMap",{enumerable:!0,get:function(){return s.VariableMap}})},"./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/function(e,t,r){var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){void 0===s&&(s=r),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,s){void 0===s&&(s=r),e[s]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||s(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),t.ExpressionParser=t.ExpressionBuilder=void 0;var n=r(/*! ./core/ExpressionBuilder */"./src/core/ExpressionBuilder.ts");Object.defineProperty(t,"ExpressionBuilder",{enumerable:!0,get:function(){return n.ExpressionBuilder}});var i=r(/*! ./core/ExpressionParser */"./src/core/ExpressionParser.ts");Object.defineProperty(t,"ExpressionParser",{enumerable:!0,get:function(){return i.ExpressionParser}}),o(r(/*! ./expression */"./src/expression/index.ts"),t)}},t={};var r=function r(s){var o=t[s];if(void 0!==o)return o.exports;var n=t[s]={exports:{}};return e[s].call(n.exports,n,n.exports,r),n.exports}("./src/index.ts");return r})()}));
//# sourceMappingURL=math-exp.min.js.map
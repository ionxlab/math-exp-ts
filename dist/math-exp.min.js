!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("math-exp",[],t):"object"==typeof exports?exports["math-exp"]=t():e["math-exp"]=t()}(this,(function(){return(()=>{"use strict";var e={"./src/core/ExpressionBuilder.ts":
/*!***************************************!*\
  !*** ./src/core/ExpressionBuilder.ts ***!
  \***************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ExpressionBuilder=void 0;const s=r(/*! ../expression */"./src/expression/index.ts");t.ExpressionBuilder=class{constructor(...e){this.expression=new s.Expression,this.expression.terms=this.expression.terms.concat(e),this.expression.brackets=!1}add(e,t){return void 0!==t?this.expression.terms.splice(t,0,e):this.expression.terms.push(e),this.expression.terms.length}addAll(...e){this.expression.terms=this.expression.terms.concat(e)}remove(e){return e>=0&&e<this.expression.terms.length&&this.expression.terms.splice(e,1),this.expression}getExpression(){return this.expression}clear(){this.expression.terms=[]}}},"./src/core/ExpressionParser.ts":
/*!**************************************!*\
  !*** ./src/core/ExpressionParser.ts ***!
  \**************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ExpressionParser=void 0;const s=r(/*! ../expression */"./src/expression/index.ts"),o=r(/*! ../expression */"./src/expression/index.ts"),n=r(/*! ../expression/operators */"./src/expression/operators/index.ts"),a=r(/*! ../exceptions/BracketsMissmatchException */"./src/exceptions/BracketsMissmatchException.ts"),i=r(/*! ../exceptions/EmptyExpressionStringException */"./src/exceptions/EmptyExpressionStringException.ts"),c=r(/*! ../exceptions/UndefinedExpressionStringException */"./src/exceptions/UndefinedExpressionStringException.ts"),p=r(/*! ../exceptions/ParserException */"./src/exceptions/ParserException.ts"),u=Object.keys(n);class l{constructor(e){this.expressionStr=e}setExpressionStr(e){this.expressionStr=e}parse(e){if(void 0!==e&&this.setExpressionStr(e),!this.expressionStr)throw new c.UndefinedExpressionStringException;if(""==this.expressionStr)throw new i.EmptyExpressionStringException;const t=this.expressionStr.match(/[a-z0-9]+|[+\-*\/()^]|[&|]+/gi),r=t.filter((e=>"("==e)),o=t.filter((e=>")"==e));if(r.length!==o.length)throw new a.BracketsMissmatchException;let n=new s.Expression;const u=new Array;return u.push(n),t.forEach(((e,t)=>{const r=u[u.length-1],o=l.parseElem(e,r);if(!o)throw new p.ParserException("Unknown element: ["+e+"]");o instanceof s.Expression&&(o!==r?u.push(o):u.pop())})),n}static parseElem(e,t){let r,a=e.match(/^[0-9]+$/i);if(a)return r=new o.Constant(parseFloat(e)),t.terms.push(r),r;if(a=e.match(/^([0-9]*)\($/i),a)return a[1]&&(t.terms.push(new o.Constant(parseFloat(a[1]))),t.terms.push(new s.MultiplyOperator)),r=new s.Expression,t.terms.push(r),r;if(a=e.match(/^\)$/i),a)return t;if(a=e.match(/^([0-9]*)([a-z]+)$/i),a){a[1].length>0&&(t.terms.push(new o.Constant(parseFloat(a[1]))),t.terms.push(new s.MultiplyOperator));for(const e of u){const s=n[e];for(const o of s.names)if(o===a[2])return r=new n[e],t.terms.push(r),r}return r=new o.Variable(a[2]),t.terms.push(r),r}}}t.ExpressionParser=l},"./src/exceptions/BracketsMissmatchException.ts":
/*!******************************************************!*\
  !*** ./src/exceptions/BracketsMissmatchException.ts ***!
  \******************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BracketsMissmatchException=void 0;const s=r(/*! ./ParserException */"./src/exceptions/ParserException.ts");class o extends s.ParserException{constructor(e){super(e)}}t.BracketsMissmatchException=o},"./src/exceptions/DivisionByZeroException.ts":
/*!***************************************************!*\
  !*** ./src/exceptions/DivisionByZeroException.ts ***!
  \***************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DivisionByZeroException=void 0;const s=r(/*! ./EvaluateException */"./src/exceptions/EvaluateException.ts");class o extends s.EvaluateException{constructor(e){super(e)}}t.DivisionByZeroException=o},"./src/exceptions/EmptyExpressionException.ts":
/*!****************************************************!*\
  !*** ./src/exceptions/EmptyExpressionException.ts ***!
  \****************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EmptyExpressionException=void 0;const s=r(/*! ./EvaluateException */"./src/exceptions/EvaluateException.ts");class o extends s.EvaluateException{constructor(e){super(e)}}t.EmptyExpressionException=o},"./src/exceptions/EmptyExpressionStringException.ts":
/*!**********************************************************!*\
  !*** ./src/exceptions/EmptyExpressionStringException.ts ***!
  \**********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EmptyExpressionStringException=void 0;const s=r(/*! ./ParserException */"./src/exceptions/ParserException.ts");class o extends s.ParserException{constructor(e){super(e)}}t.EmptyExpressionStringException=o},"./src/exceptions/EvaluateException.ts":
/*!*********************************************!*\
  !*** ./src/exceptions/EvaluateException.ts ***!
  \*********************************************/(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.EvaluateException=void 0;class r extends Error{constructor(e){super(e)}}t.EvaluateException=r},"./src/exceptions/MissingOperandException.ts":
/*!***************************************************!*\
  !*** ./src/exceptions/MissingOperandException.ts ***!
  \***************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MissingOperandException=void 0;const s=r(/*! ./MissingTermException */"./src/exceptions/MissingTermException.ts");class o extends s.MissingTermException{constructor(e){super(e)}}t.MissingOperandException=o},"./src/exceptions/MissingTermException.ts":
/*!************************************************!*\
  !*** ./src/exceptions/MissingTermException.ts ***!
  \************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MissingTermException=void 0;const s=r(/*! ./EvaluateException */"./src/exceptions/EvaluateException.ts");class o extends s.EvaluateException{constructor(e){super(e)}}t.MissingTermException=o},"./src/exceptions/ParserException.ts":
/*!*******************************************!*\
  !*** ./src/exceptions/ParserException.ts ***!
  \*******************************************/(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ParserException=void 0;class r extends Error{constructor(e){super(e)}}t.ParserException=r},"./src/exceptions/UndefinedExpressionStringException.ts":
/*!**************************************************************!*\
  !*** ./src/exceptions/UndefinedExpressionStringException.ts ***!
  \**************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.UndefinedExpressionStringException=void 0;const s=r(/*! ./ParserException */"./src/exceptions/ParserException.ts");class o extends s.ParserException{constructor(e){super(e)}}t.UndefinedExpressionStringException=o},"./src/expression/abstract/OperandAbstract.ts":
/*!****************************************************!*\
  !*** ./src/expression/abstract/OperandAbstract.ts ***!
  \****************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OperandAbstract=void 0;const s=r(/*! ./TermAbstract */"./src/expression/abstract/TermAbstract.ts");class o extends s.TermAbstract{constructor(e){super(),this.precedence=0,this._brackets=!1,void 0!==e&&(this._brackets=e)}get brackets(){return this._brackets}set brackets(e){this._brackets=e}}t.OperandAbstract=o},"./src/expression/abstract/OperatorAbstract.ts":
/*!*****************************************************!*\
  !*** ./src/expression/abstract/OperatorAbstract.ts ***!
  \*****************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OperatorAbstract=void 0;const s=r(/*! ./TermAbstract */"./src/expression/abstract/TermAbstract.ts");class o extends s.TermAbstract{toString(e){let t=0;return void 0!==e&&e>=0&&e<this.names.length&&(t=0),this.names[t]}}t.OperatorAbstract=o},"./src/expression/abstract/OperatorFunctionAbstract.ts":
/*!*************************************************************!*\
  !*** ./src/expression/abstract/OperatorFunctionAbstract.ts ***!
  \*************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OperatorFunctionAbstract=void 0;const s=r(/*! ./OperatorAbstract */"./src/expression/abstract/OperatorAbstract.ts");class o extends s.OperatorAbstract{constructor(){super(...arguments),this.precedence=18}}t.OperatorFunctionAbstract=o},"./src/expression/abstract/OperatorLeftRightAbstract.ts":
/*!**************************************************************!*\
  !*** ./src/expression/abstract/OperatorLeftRightAbstract.ts ***!
  \**************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OperatorLeftRightAbstract=void 0;const s=r(/*! ./OperatorAbstract */"./src/expression/abstract/OperatorAbstract.ts");class o extends s.OperatorAbstract{}t.OperatorLeftRightAbstract=o},"./src/expression/abstract/TermAbstract.ts":
/*!*************************************************!*\
  !*** ./src/expression/abstract/TermAbstract.ts ***!
  \*************************************************/(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TermAbstract=void 0;t.TermAbstract=class{}},"./src/expression/core/Expression.ts":
/*!*******************************************!*\
  !*** ./src/expression/core/Expression.ts ***!
  \*******************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Expression=void 0;const s=r(/*! ../abstract/OperatorAbstract */"./src/expression/abstract/OperatorAbstract.ts"),o=r(/*! ../abstract/OperandAbstract */"./src/expression/abstract/OperandAbstract.ts"),n=r(/*! ../abstract/TermAbstract */"./src/expression/abstract/TermAbstract.ts"),a=r(/*! ../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts"),i=r(/*! ../abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts"),c=r(/*! ../operands */"./src/expression/operands/index.ts"),p=r(/*! ../../exceptions/MissingTermException */"./src/exceptions/MissingTermException.ts"),u=r(/*! ../../exceptions/MissingOperandException */"./src/exceptions/MissingOperandException.ts"),l=r(/*! ../../exceptions/EmptyExpressionException */"./src/exceptions/EmptyExpressionException.ts"),d=r(/*! ../../exceptions/EvaluateException */"./src/exceptions/EvaluateException.ts");class x extends n.TermAbstract{constructor(...e){super(),this.precedence=19,this._brackets=!0,this._terms=new Array,void 0!==e&&(this._terms=this._terms.concat(e))}get terms(){return this._terms}set terms(e){this._terms=e}get brackets(){return this._brackets}set brackets(e){this._brackets=e}evaluate(){if(0==this._terms.length)throw new l.EmptyExpressionException;x.Log("Evaluating:",this.toString());let e=this.clone(),t=e.toString();for(;e._terms.length>1||!(e._terms[0]instanceof c.Constant);){let r=-1,s=-1;if(e._terms.forEach(((e,t)=>{e.precedence>r&&(r=e.precedence,s=t)})),x.evaluateTerm(e,s),x.Log("Temporary expression:",e.toString()),e._terms.length>1&&t===e.toString())throw new d.EvaluateException("Error while evaluating.");t=e.toString()}return e._terms[0].evaluate()}static evaluateTerm(e,t){const r=e._terms[t];x.Log("Evaluating Term:",r.toString());let n=0;if(!r)throw new p.MissingTermException("Term at '"+t+"' is missing.");if(r instanceof x){x.Log("Term is an 'Expression'"),n=r.evaluate(),e._terms[t]=new c.Constant(n,!0);const s=e._terms[t-1];if(s instanceof x||s instanceof o.OperandAbstract){const r=s.evaluate();e._terms[t]=new c.Constant(n*r),e._terms.splice(t-1,1)}}else if(r instanceof o.OperandAbstract)r instanceof c.Constant&&x.Log("Term is a 'Constant'"),r instanceof c.Variable&&x.Log("Term is a 'Variable'"),n=r.evaluate(),e._terms[t]=new c.Constant(n,r.brackets);else if(r instanceof s.OperatorAbstract)if(r instanceof a.OperatorLeftRightAbstract){x.Log("Term is an 'OperatorLeftRight'");const s=e._terms[t-1],o=e._terms[t+1];if(!(s instanceof c.Constant))throw new u.MissingOperandException("Operator '"+r.toString()+"' left argument '"+s.toString()+"' is invalid.");if(!(o instanceof c.Constant))throw new u.MissingOperandException("Operator '"+r.toString()+"' right argument '"+o.toString()+"' is invalid.");n=r.evaluate(s,o),x.Log("Evaluated Value: ",n),e._terms[t]=new c.Constant(n),e._terms.splice(t+1,1),e._terms.splice(t-1,1)}else if(r instanceof i.OperatorFunctionAbstract){x.Log("Term is an 'OperatorFunction'");const s=e._terms[t+1];if(!(s instanceof c.Constant))throw new u.MissingOperandException("Operator '"+r.toString()+"' argument '"+s.toString()+"' is invalid.");n=r.evaluate(s),e._terms[t]=new c.Constant(n),e._terms.splice(t+1,1)}else x.Log("Unknown operator term ?");else x.Log("Unknown term ?");return e}static Log(...e){x.debug&&console.log.apply(console,e)}clone(){let e=new x;return e.brackets=this.brackets,e._terms=e._terms.concat(this._terms),e}toString(){let e="";return this._terms.forEach(((t,r)=>{e+=t.toString()})),this.brackets&&(e="("+e+")"),e}}t.Expression=x,x.debug=!1},"./src/expression/core/Variables.ts":
/*!******************************************!*\
  !*** ./src/expression/core/Variables.ts ***!
  \******************************************/(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Variables=void 0;class r{}t.Variables=r,r.map=new Map([["a",0],["b",0],["c",0],["d",0],["e",0],["f",0],["g",0],["h",0],["i",0],["j",0],["k",0],["l",0],["m",0],["n",0],["o",0],["p",0],["q",0],["r",0],["s",0],["t",0],["u",0],["v",0],["w",0],["x",0],["y",0],["z",0],["A",0],["B",0],["C",0],["D",0],["E",0],["F",0],["G",0],["H",0],["I",0],["J",0],["K",0],["L",0],["M",0],["N",0],["O",0],["P",0],["Q",0],["R",0],["S",0],["T",0],["U",0],["V",0],["W",0],["X",0],["Y",0],["Z",0],["pi",Math.PI],["π",Math.PI],["phi",(1+Math.sqrt(5))/2],["φ",(1+Math.sqrt(5))/2]])},"./src/expression/core/index.ts":
/*!**************************************!*\
  !*** ./src/expression/core/index.ts ***!
  \**************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Variables=t.Expression=void 0;var s=r(/*! ./Expression */"./src/expression/core/Expression.ts");Object.defineProperty(t,"Expression",{enumerable:!0,get:function(){return s.Expression}});var o=r(/*! ./Variables */"./src/expression/core/Variables.ts");Object.defineProperty(t,"Variables",{enumerable:!0,get:function(){return o.Variables}})},"./src/expression/index.ts":
/*!*********************************!*\
  !*** ./src/expression/index.ts ***!
  \*********************************/function(e,t,r){var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){void 0===s&&(s=r),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,s){void 0===s&&(s=r),e[s]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||s(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),o(r(/*! ./core */"./src/expression/core/index.ts"),t),o(r(/*! ./operators */"./src/expression/operators/index.ts"),t),o(r(/*! ./operands */"./src/expression/operands/index.ts"),t)},"./src/expression/operands/Constant.ts":
/*!*********************************************!*\
  !*** ./src/expression/operands/Constant.ts ***!
  \*********************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Constant=void 0;const s=r(/*! ../abstract/OperandAbstract */"./src/expression/abstract/OperandAbstract.ts");class o extends s.OperandAbstract{constructor(e,t){super(t),this.value=e}evaluate(){return this.value}toString(){let e=this.value.toString();return this.brackets&&(e="("+e+")"),e}}t.Constant=o},"./src/expression/operands/Variable.ts":
/*!*********************************************!*\
  !*** ./src/expression/operands/Variable.ts ***!
  \*********************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Variable=void 0;const s=r(/*! ../abstract/OperandAbstract */"./src/expression/abstract/OperandAbstract.ts"),o=r(/*! ../core */"./src/expression/core/index.ts");class n extends s.OperandAbstract{constructor(e,t,r){super(t),this.precedence=20,this.identifier=e,void 0!==r&&o.Variables.map.set(this.identifier,r)}evaluate(){let e=o.Variables.map.get(this.identifier);return null==e&&(e=0),e}toString(){let e=this.identifier.toString();return this.brackets&&(e="("+e+")"),e}}t.Variable=n},"./src/expression/operands/index.ts":
/*!******************************************!*\
  !*** ./src/expression/operands/index.ts ***!
  \******************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Variable=t.Constant=void 0;var s=r(/*! ./Constant */"./src/expression/operands/Constant.ts");Object.defineProperty(t,"Constant",{enumerable:!0,get:function(){return s.Constant}});var o=r(/*! ./Variable */"./src/expression/operands/Variable.ts");Object.defineProperty(t,"Variable",{enumerable:!0,get:function(){return o.Variable}})},"./src/expression/operators/arithmetic/Divide.operator.ts":
/*!****************************************************************!*\
  !*** ./src/expression/operators/arithmetic/Divide.operator.ts ***!
  \****************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.DivideOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts"),o=r(/*! ../../../exceptions/DivisionByZeroException */"./src/exceptions/DivisionByZeroException.ts");class n extends s.OperatorLeftRightAbstract{constructor(){super(...arguments),this.names=n.names,this.precedence=13}evaluate(e,t){if(0==t.value)throw new o.DivisionByZeroException;return e.value/t.value}}t.DivideOperator=n,n.names=new Array("/")},"./src/expression/operators/arithmetic/Exponent.operator.ts":
/*!******************************************************************!*\
  !*** ./src/expression/operators/arithmetic/Exponent.operator.ts ***!
  \******************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ExponentOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(){super(...arguments),this.names=o.names,this.precedence=14}evaluate(e,t){return Math.pow(e.value,t.value)}}t.ExponentOperator=o,o.names=new Array("^")},"./src/expression/operators/arithmetic/Minus.operator.ts":
/*!***************************************************************!*\
  !*** ./src/expression/operators/arithmetic/Minus.operator.ts ***!
  \***************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MinusOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(){super(...arguments),this.names=o.names,this.precedence=12}evaluate(e,t){return e.value-t.value}}t.MinusOperator=o,o.names=new Array("-")},"./src/expression/operators/arithmetic/Multiply.operator.ts":
/*!******************************************************************!*\
  !*** ./src/expression/operators/arithmetic/Multiply.operator.ts ***!
  \******************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MultiplyOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(e){super(),this.names=o.names,this.precedence=13,this.hidden=!1,this.hidden=e}evaluate(e,t){return e.value*t.value}toString(e){return this.hidden?"":super.toString(e)}}t.MultiplyOperator=o,o.names=new Array("*")},"./src/expression/operators/arithmetic/Plus.operator.ts":
/*!**************************************************************!*\
  !*** ./src/expression/operators/arithmetic/Plus.operator.ts ***!
  \**************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PlusOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(){super(...arguments),this.names=o.names,this.precedence=12}evaluate(e,t){return e.value+t.value}}t.PlusOperator=o,o.names=new Array("+")},"./src/expression/operators/arithmetic/index.ts":
/*!******************************************************!*\
  !*** ./src/expression/operators/arithmetic/index.ts ***!
  \******************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PlusOperator=t.MultiplyOperator=t.MinusOperator=t.ExponentOperator=t.DivideOperator=void 0;var s=r(/*! ./Divide.operator */"./src/expression/operators/arithmetic/Divide.operator.ts");Object.defineProperty(t,"DivideOperator",{enumerable:!0,get:function(){return s.DivideOperator}});var o=r(/*! ./Exponent.operator */"./src/expression/operators/arithmetic/Exponent.operator.ts");Object.defineProperty(t,"ExponentOperator",{enumerable:!0,get:function(){return o.ExponentOperator}});var n=r(/*! ./Minus.operator */"./src/expression/operators/arithmetic/Minus.operator.ts");Object.defineProperty(t,"MinusOperator",{enumerable:!0,get:function(){return n.MinusOperator}});var a=r(/*! ./Multiply.operator */"./src/expression/operators/arithmetic/Multiply.operator.ts");Object.defineProperty(t,"MultiplyOperator",{enumerable:!0,get:function(){return a.MultiplyOperator}});var i=r(/*! ./Plus.operator */"./src/expression/operators/arithmetic/Plus.operator.ts");Object.defineProperty(t,"PlusOperator",{enumerable:!0,get:function(){return i.PlusOperator}})},"./src/expression/operators/bitwise/And.operator.ts":
/*!**********************************************************!*\
  !*** ./src/expression/operators/bitwise/And.operator.ts ***!
  \**********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AndOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(){super(...arguments),this.names=o.names,this.precedence=8}evaluate(e,t){return e.value&t.value}}t.AndOperator=o,o.names=new Array("&")},"./src/expression/operators/bitwise/Or.operator.ts":
/*!*********************************************************!*\
  !*** ./src/expression/operators/bitwise/Or.operator.ts ***!
  \*********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.OrOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(){super(...arguments),this.names=o.names,this.precedence=6}evaluate(e,t){return e.value|t.value}}t.OrOperator=o,o.names=new Array("|")},"./src/expression/operators/bitwise/Xor.operator.ts":
/*!**********************************************************!*\
  !*** ./src/expression/operators/bitwise/Xor.operator.ts ***!
  \**********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.XorOperator=void 0;const s=r(/*! ../../abstract/OperatorLeftRightAbstract */"./src/expression/abstract/OperatorLeftRightAbstract.ts");class o extends s.OperatorLeftRightAbstract{constructor(){super(...arguments),this.names=o.names,this.precedence=7}evaluate(e,t){return e.value^t.value}}t.XorOperator=o,o.names=new Array("||")},"./src/expression/operators/bitwise/index.ts":
/*!***************************************************!*\
  !*** ./src/expression/operators/bitwise/index.ts ***!
  \***************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.XorOperator=t.OrOperator=t.AndOperator=void 0;var s=r(/*! ./And.operator */"./src/expression/operators/bitwise/And.operator.ts");Object.defineProperty(t,"AndOperator",{enumerable:!0,get:function(){return s.AndOperator}});var o=r(/*! ./Or.operator */"./src/expression/operators/bitwise/Or.operator.ts");Object.defineProperty(t,"OrOperator",{enumerable:!0,get:function(){return o.OrOperator}});var n=r(/*! ./Xor.operator */"./src/expression/operators/bitwise/Xor.operator.ts");Object.defineProperty(t,"XorOperator",{enumerable:!0,get:function(){return n.XorOperator}})},"./src/expression/operators/function/Cos.operator.ts":
/*!***********************************************************!*\
  !*** ./src/expression/operators/function/Cos.operator.ts ***!
  \***********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.CosOperator=void 0;const s=r(/*! ../../abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts");class o extends s.OperatorFunctionAbstract{constructor(){super(...arguments),this.names=o.names}evaluate(e){const t=e.evaluate();return Math.cos(t)}}t.CosOperator=o,o.names=new Array("cos")},"./src/expression/operators/function/Ln.operator.ts":
/*!**********************************************************!*\
  !*** ./src/expression/operators/function/Ln.operator.ts ***!
  \**********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LnOperator=void 0;const s=r(/*! ../../abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts");class o extends s.OperatorFunctionAbstract{constructor(){super(...arguments),this.names=o.names}evaluate(e){const t=e.evaluate();return Math.log(t)}}t.LnOperator=o,o.names=new Array("ln")},"./src/expression/operators/function/Log.operator.ts":
/*!***********************************************************!*\
  !*** ./src/expression/operators/function/Log.operator.ts ***!
  \***********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LogOperator=void 0;const s=r(/*! ../../abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts");class o extends s.OperatorFunctionAbstract{constructor(){super(...arguments),this.names=o.names}evaluate(e){const t=e.evaluate();return Math.log10(t)}}t.LogOperator=o,o.names=new Array("log")},"./src/expression/operators/function/Sin.operator.ts":
/*!***********************************************************!*\
  !*** ./src/expression/operators/function/Sin.operator.ts ***!
  \***********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SinOperator=void 0;const s=r(/*! ../../abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts");class o extends s.OperatorFunctionAbstract{constructor(){super(...arguments),this.names=o.names}evaluate(e){const t=e.evaluate();return Math.sin(t)}}t.SinOperator=o,o.names=new Array("sin")},"./src/expression/operators/function/SquareRoot.operator.ts":
/*!******************************************************************!*\
  !*** ./src/expression/operators/function/SquareRoot.operator.ts ***!
  \******************************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SquareRootOperator=void 0;const s=r(/*! ../../abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts");class o extends s.OperatorFunctionAbstract{constructor(){super(...arguments),this.names=o.names}evaluate(e){const t=e.evaluate();return Math.sqrt(t)}}t.SquareRootOperator=o,o.names=new Array("sqrt","√")},"./src/expression/operators/function/Tan.operator.ts":
/*!***********************************************************!*\
  !*** ./src/expression/operators/function/Tan.operator.ts ***!
  \***********************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TanOperator=void 0;const s=r(/*! ../../abstract/OperatorFunctionAbstract */"./src/expression/abstract/OperatorFunctionAbstract.ts");class o extends s.OperatorFunctionAbstract{constructor(){super(...arguments),this.names=o.names}evaluate(e){const t=e.evaluate();return Math.tan(t)}}t.TanOperator=o,o.names=new Array("tan")},"./src/expression/operators/function/index.ts":
/*!****************************************************!*\
  !*** ./src/expression/operators/function/index.ts ***!
  \****************************************************/(e,t,r)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TanOperator=t.SquareRootOperator=t.SinOperator=t.LogOperator=t.LnOperator=t.CosOperator=void 0;var s=r(/*! ./Cos.operator */"./src/expression/operators/function/Cos.operator.ts");Object.defineProperty(t,"CosOperator",{enumerable:!0,get:function(){return s.CosOperator}});var o=r(/*! ./Ln.operator */"./src/expression/operators/function/Ln.operator.ts");Object.defineProperty(t,"LnOperator",{enumerable:!0,get:function(){return o.LnOperator}});var n=r(/*! ./Log.operator */"./src/expression/operators/function/Log.operator.ts");Object.defineProperty(t,"LogOperator",{enumerable:!0,get:function(){return n.LogOperator}});var a=r(/*! ./Sin.operator */"./src/expression/operators/function/Sin.operator.ts");Object.defineProperty(t,"SinOperator",{enumerable:!0,get:function(){return a.SinOperator}});var i=r(/*! ./SquareRoot.operator */"./src/expression/operators/function/SquareRoot.operator.ts");Object.defineProperty(t,"SquareRootOperator",{enumerable:!0,get:function(){return i.SquareRootOperator}});var c=r(/*! ./Tan.operator */"./src/expression/operators/function/Tan.operator.ts");Object.defineProperty(t,"TanOperator",{enumerable:!0,get:function(){return c.TanOperator}})},"./src/expression/operators/index.ts":
/*!*******************************************!*\
  !*** ./src/expression/operators/index.ts ***!
  \*******************************************/function(e,t,r){var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){void 0===s&&(s=r),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,s){void 0===s&&(s=r),e[s]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||s(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),o(r(/*! ./arithmetic */"./src/expression/operators/arithmetic/index.ts"),t),o(r(/*! ./bitwise */"./src/expression/operators/bitwise/index.ts"),t),o(r(/*! ./function */"./src/expression/operators/function/index.ts"),t)},"./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/function(e,t,r){var s=this&&this.__createBinding||(Object.create?function(e,t,r,s){void 0===s&&(s=r),Object.defineProperty(e,s,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,s){void 0===s&&(s=r),e[s]=t[r]}),o=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||Object.prototype.hasOwnProperty.call(t,r)||s(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),t.ExpressionParser=t.ExpressionBuilder=void 0;var n=r(/*! ./core/ExpressionBuilder */"./src/core/ExpressionBuilder.ts");Object.defineProperty(t,"ExpressionBuilder",{enumerable:!0,get:function(){return n.ExpressionBuilder}});var a=r(/*! ./core/ExpressionParser */"./src/core/ExpressionParser.ts");Object.defineProperty(t,"ExpressionParser",{enumerable:!0,get:function(){return a.ExpressionParser}}),o(r(/*! ./expression */"./src/expression/index.ts"),t)}},t={};var r=function r(s){var o=t[s];if(void 0!==o)return o.exports;var n=t[s]={exports:{}};return e[s].call(n.exports,n,n.exports,r),n.exports}("./src/index.ts");return r})()}));
//# sourceMappingURL=math-exp.min.js.map